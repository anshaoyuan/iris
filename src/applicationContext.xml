<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
		default-lazy-init="true">

	<description>Spring公共配置</description>
	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 排除了controller -->
	<context:component-scan base-package="com">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
		<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
		<property name="packagesToScan" value="com.iris"/>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.SingletonEhCacheProvider</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.generate_statistics">true</prop>
                <!-- <prop key="hibernate.use_sql_comments">true</prop> -->
                <prop key="hibernate.generate_statistics">true</prop>
				<prop key="net.sf.ehcache.configurationResourceName">cache/ehcache-hibernate-local.xml</prop>
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>
	</bean>
	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect" class="org.springside.modules.persistence.Hibernates">
				<constructor-arg ref="dataSource"/>
			</bean>
		</property>
	</bean>
	<!-- Spring Data Jpa配置, 扫描base-package下所有继承于Repository<T,ID>的接口 -->
	<!--base-package 扫的包不能直接是com,首先创一个包如iris，entity和repository都放入iris下，扫iris包-->
 	<jpa:repositories base-package="com.iris" transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory"/>
	

	

	<!-- 定义aspectj -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<!-- hibernate validator -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
	

	<!-- 事务管理器配置, Jpa单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
<!-- 国际化 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找  -->
                <value>classpath:messages</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="useCodeAsDefaultMessage" value="true" />
        <property name="cacheSeconds" value="86400"/>
    </bean>
	<!-- local development环境 -->
	<beans profile="development">
		<context:property-placeholder ignore-resource-not-found="true" local-override="false"
			location="classpath*:/application.properties,classpath*:/application-local.properties" />	
				
		<bean id="c3p0DataSource"  abstract="true">               
             <property name="initialPoolSize" value="1"/>  <!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->              
            <property name="minPoolSize" value="1"/> <!--连接池中保留的最小连接数。-->                       
            <property name="maxPoolSize" value="300"/>  <!--连接池中保留的最大连接数。Default: 15 -->              
           <property name="maxIdleTime" value="60"/><!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->                       
           <property name="acquireIncrement" value="5"/><!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->                    
            <property name="idleConnectionTestPeriod" value="60"/>   <!--每60秒检查所有连接池中的空闲连接。Default: 0 -->     
      </bean>
		<!-- C3p0 连接池-->
		<!--
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" parent="c3p0DataSource">
			<property name="driverClass" value="com.mysql.jdbc.Driver" />
			<property name="jdbcUrl" value="${jdbc.url}" />
			    <property name="properties">
        			<props>
			            <prop key="c3p0.acquireIncrement">5</prop>
			            <prop key="c3p0.maxIdleTime">30</prop>
			            <prop key="c3p0.idleConnectionTestPeriod">20</prop>
			            <prop key="c3p0.maxPoolSize">100</prop>
			            <prop key="c3p0.maxStatements">0</prop>
			            <prop key="c3p0.minPoolSize">1</prop>
			            <prop key="user">${jdbc.username}</prop>
			            <prop key="password">${jdbc.password}</prop>
       				 </props>
   			 </property>
		</bean>
		 -->
		 <!-- 数据源配置,使用应用内的Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<!-- Connection Info -->
            <property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="maxActive" value="${jdbc.pool.maxActive}" />
			<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
			<property name="defaultAutoCommit" value="false" />
			<property name="testOnBorrow" value="true" />
			<property name="testWhileIdle" value="true" />
			<property name="validationQuery" value="select 1 from dual" />
		</bean>
	</beans>
<!-- unit test环境 -->
	<beans profile="test">
		<context:property-placeholder ignore-resource-not-found="true" local-override="true"
			location="classpath*:/application.properties,classpath*:/application-local.properties" />	
			
		 <!-- 数据源配置,使用应用内的Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
			<!-- Connection Info -->
            <property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<property name="maxActive" value="${jdbc.pool.maxActive}" />
			<property name="maxIdle" value="${jdbc.pool.maxIdle}" />
			<property name="defaultAutoCommit" value="false" />
			<property name="testOnBorrow" value="true" />
			<property name="testWhileIdle" value="true" />
			<property name="validationQuery" value="select 1 from dual" />
		</bean>

	</beans>
</beans>